#!/usr/bin/env node

const {BncThreshSigClient} = require('../dist/src');
const client = new BncThreshSigClient();

const program = require('commander');

program
    .command('address')
    .option('-i, --index <index>', 'Address index')
    .action(async (options) => {
        await client.init();
        const address = client.getAddress(options.index);
        console.log(address);
    });

program
    .command('balance <address>')
    .action(async (address) => {
        await client.init();
        const balance = await client.getBalance(address);
        console.log(balance);
    });

program
    .command('transfer <from> <to> <amount>')
    .option('-m, --memo <text>')
    .option('-a, --asset <text>')
    .action(async (from, to, amount, options) => {
        await client.init();
        const transferResponse = await client.transfer(from, to, parseFloat(amount), options.asset || 'BNB', options.memo);
        console.log(transferResponse);
    });

program
    .command('buy_order <symbol> <price> <quantity>') // buy_order LCQ-AC5_BNB 0.001 10
    .action(async (symbol, price, quantity) => {
        await client.init();
        const transferResponse = await client.placeOrder(null, symbol,1,parseFloat(price),parseFloat(quantity));
        console.log(transferResponse);
    });
program
    .command('sell_order <symbol> <price> <quantity>')
    .action(async (symbol, price, quantity) => {
        await client.init();
        const transferResponse = await client.placeOrder(null, symbol,2,parseFloat(price),parseFloat(quantity));
        console.log(transferResponse);
    });

program
    .command('cancel_order <symbol> <ref_id>')
    .action(async (symbol, ref_id) => {
        await client.init();
        const transferResponse = await client.CancelOrder(null, symbol, ref_id);
        console.log(transferResponse);
    });

program.parse(process.argv);
